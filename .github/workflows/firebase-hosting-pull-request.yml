# Deploy site to Firebase Hosting on PR
name: Deploy to Firebase Hosting on PR
on:
  pull_request:
    branches:
      - main
defaults:
  run:
    working-directory: ./projectApp
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run the build, lint, test flow
        # need to build and test before deploying, as this job runs
        # independently of the main CI workflow
        run: |
          npm ci
          npm run lint
          npm run build
          npx pm2 start logger-server.js --name logger
          npm run test
          npx pm2 delete logger
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CMPT371_2025_T1 }}
          entryPoint: './projectApp'
          projectId: cmpt371-2025-t1

  # Elastic running at OC during term
  send-logs-to-elastic:
    runs-on: ubuntu-latest
    needs: [build_and_preview]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Upload GitHub Action workflows logs to elastic
        uses: loop1dev/github-actions-to-elk@v1.0.0
        with:
          githubToken: "${{ secrets.GITHUB }}"
          githubOrg: "UniversityOfSaskatchewanCMPT371"
          githubRepository: "term-project-2025-team-1"
          githubRunId: "${{ github.run_id }}"
          elasticHost: "${{ secrets.ELASTIC_HOST }}"
          elasticApiKeyId: "${{ secrets.ELASTIC_KEY_ID }}"
          elasticApiKey: "${{ secrets.ELASTIC_API_KEY }}"
          elasticIndex: "ci-cd"
