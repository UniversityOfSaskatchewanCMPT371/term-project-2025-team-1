#  Continuous Integration (CI) workflow to build and test our project
name: BuildandTest

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

  # Allows this workflow to be run manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    working-directory: ./projectApp
jobs:
  job-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test

  job-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Debug Before Install (Temporary)
        run: echo "Before Install"
      - name: Install dependencies
        run: npm ci --verbose # Added verbosity
      - name: Run linter
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test
        env:
          CI: true  # Keep this
        timeout-minutes: 3

  send-logs-to-elastic:
      runs-on: ubuntu-latest
      if: always()
      steps:
        - name: Upload GitHub Action workflows logs to elastic
          uses: knutfr/github-actions-to-elk@v1.0.4
          with:
            githubToken: "${{ secrets.GITHUB }}"
            githubOrg: "UniversityOfSaskatchewanCMPT371"
            githubRepository: "term-project-2025-team-1"
            githubRunId: "${{ github.run_id }}"
            elasticHost: "${{ secrets.ELASTIC_HOST }}"
            elasticApiKeyId: "${{ secrets.ELASTIC_KEY_ID }}"
            elasticApiKey: "${{ secrets.ELASTIC_API_KEY }}"
            elasticIndex: "ci-cd"