# Will cache the npm modules to speed up the build process

name: Caching with npm
on: push
defaults:
  run:
    working-directory: ./projectApp
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install dependencies
        run: npm ci

  # Elastic running at OC during term
  send-logs-to-elastic:
    runs-on: ubuntu-latest
    needs: [build]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Upload GitHub Action workflows logs to elastic
        uses: loop1dev/github-actions-to-elk@v1.0.0
        with:
          githubToken: "${{ secrets.GITHUB }}"
          githubOrg: "UniversityOfSaskatchewanCMPT371"
          githubRepository: "term-project-2025-team-1"
          githubRunId: "${{ github.run_id }}"
          elasticHost: "${{ secrets.ELASTIC_HOST }}"
          elasticApiKeyId: "${{ secrets.ELASTIC_KEY_ID }}"
          elasticApiKey: "${{ secrets.ELASTIC_API_KEY }}"
          elasticIndex: "ci-cd"
